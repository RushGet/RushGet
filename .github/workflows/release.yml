name: Build and Release Rust Binary
on:
  push:
    branches:
      - release
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          [
            "i686-pc-windows-gnu",
            "x86_64-apple-darwin",
            "aarch64-apple-darwin",
            "x86_64-unknown-linux-gnu",
          ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install Targets
        run: rustup target add ${{ matrix.target }}
      - name: Build Release Binary
        run: |
          cd src
          cargo build --release --target ${{ matrix.target }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
      - name: Upload Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/my-binary
          asset_name: my-binary-${{ matrix.target }}-${{ github.ref }}
          asset_content_type: application/octet-stream
